{"ast":null,"code":"var _jsxFileName = \"/Users/justin/Desktop/Work/Zerver/my_app/src/InstructorAttendance.js\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import QRCode from \"qrcode\";\n\n// function InstructorAttendance() {\n//   const navigate = useNavigate();\n\n//   var qrcode = new QRCode(\"qrcode\");\n\n//   function makeCode() {\n//     var elText = document.getElementById(\"text\");\n\n//     if (!elText.value) {\n//       alert(\"Input a text\");\n//       elText.focus();\n//       return;\n//     }\n\n//     qrcode.makeCode(elText.value);\n//   }\n\n//   makeCode();\n\n//   $(\"#text\")\n//     .on(\"blur\", function () {\n//       makeCode();\n//     })\n//     .on(\"keydown\", function (e) {\n//       if (e.keyCode == 13) {\n//         makeCode();\n//       }\n//     });\n\n//   return (\n//     <div className=\"InstructorAttendance\">\n//       <div id=\"qrcode\"></div>\n//       <script type=\"text/javascript\">\n//         new QRCode(document.getElementById(\"qrcode\"),\n//         \"http://jindo.dev.naver.com/collie\");\n//       </script>\n//       <button\n//         className=\"InstructorAttendance_Done\"\n//         onClick={() => navigate(\"/InstructorHome\")}\n//       >\n//         Cancel\n//       </button>\n//     </div>\n//   );\n// }\n\n// export default InstructorAttendance;\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport QRCode from \"qrcode\"; // Ensure you have qrcode library installed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InstructorAttendance() {\n  _s();\n  const navigate = useNavigate();\n  const [text, setText] = useState(\"\");\n  const qrRef = useRef();\n  useEffect(() => {\n    if (qrRef.current && text) {\n      QRCode.toCanvas(qrRef.current, text, error => {\n        if (error) console.error(error);\n      });\n    }\n  }, [text]);\n  const handleInputChange = event => {\n    setText(event.target.value);\n  };\n  const handleKeyDown = event => {\n    if (event.keyCode === 13) {\n      setText(event.target.value);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"InstructorAttendance\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"qrcode\",\n      ref: qrRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"text\",\n      type: \"text\",\n      value: text,\n      onChange: handleInputChange,\n      onKeyDown: handleKeyDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"InstructorAttendance_Done\",\n      onClick: () => navigate(\"/InstructorHome\"),\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(InstructorAttendance, \"0u7oLfvCXcxGTgsXhCC/wO22cQw=\", false, function () {\n  return [useNavigate];\n});\n_c = InstructorAttendance;\nexport default InstructorAttendance;\nvar _c;\n$RefreshReg$(_c, \"InstructorAttendance\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","QRCode","jsxDEV","_jsxDEV","InstructorAttendance","_s","navigate","text","setText","qrRef","current","toCanvas","error","console","handleInputChange","event","target","value","handleKeyDown","keyCode","className","children","id","ref","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onKeyDown","onClick","_c","$RefreshReg$"],"sources":["/Users/justin/Desktop/Work/Zerver/my_app/src/InstructorAttendance.js"],"sourcesContent":["// import React from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import QRCode from \"qrcode\";\n\n// function InstructorAttendance() {\n//   const navigate = useNavigate();\n\n//   var qrcode = new QRCode(\"qrcode\");\n\n//   function makeCode() {\n//     var elText = document.getElementById(\"text\");\n\n//     if (!elText.value) {\n//       alert(\"Input a text\");\n//       elText.focus();\n//       return;\n//     }\n\n//     qrcode.makeCode(elText.value);\n//   }\n\n//   makeCode();\n\n//   $(\"#text\")\n//     .on(\"blur\", function () {\n//       makeCode();\n//     })\n//     .on(\"keydown\", function (e) {\n//       if (e.keyCode == 13) {\n//         makeCode();\n//       }\n//     });\n\n//   return (\n//     <div className=\"InstructorAttendance\">\n//       <div id=\"qrcode\"></div>\n//       <script type=\"text/javascript\">\n//         new QRCode(document.getElementById(\"qrcode\"),\n//         \"http://jindo.dev.naver.com/collie\");\n//       </script>\n//       <button\n//         className=\"InstructorAttendance_Done\"\n//         onClick={() => navigate(\"/InstructorHome\")}\n//       >\n//         Cancel\n//       </button>\n//     </div>\n//   );\n// }\n\n// export default InstructorAttendance;\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport QRCode from \"qrcode\"; // Ensure you have qrcode library installed\n\nfunction InstructorAttendance() {\n  const navigate = useNavigate();\n  const [text, setText] = useState(\"\");\n  const qrRef = useRef();\n\n  useEffect(() => {\n    if (qrRef.current && text) {\n      QRCode.toCanvas(qrRef.current, text, (error) => {\n        if (error) console.error(error);\n      });\n    }\n  }, [text]);\n\n  const handleInputChange = (event) => {\n    setText(event.target.value);\n  };\n\n  const handleKeyDown = (event) => {\n    if (event.keyCode === 13) {\n      setText(event.target.value);\n    }\n  };\n\n  return (\n    <div className=\"InstructorAttendance\">\n      <canvas id=\"qrcode\" ref={qrRef}></canvas>\n      <input\n        id=\"text\"\n        type=\"text\"\n        value={text}\n        onChange={handleInputChange}\n        onKeyDown={handleKeyDown}\n      />\n      <button\n        className=\"InstructorAttendance_Done\"\n        onClick={() => navigate(\"/InstructorHome\")}\n      >\n        Cancel\n      </button>\n    </div>\n  );\n}\n\nexport default InstructorAttendance;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,QAAQ,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,oBAAoBA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMY,KAAK,GAAGV,MAAM,CAAC,CAAC;EAEtBD,SAAS,CAAC,MAAM;IACd,IAAIW,KAAK,CAACC,OAAO,IAAIH,IAAI,EAAE;MACzBN,MAAM,CAACU,QAAQ,CAACF,KAAK,CAACC,OAAO,EAAEH,IAAI,EAAGK,KAAK,IAAK;QAC9C,IAAIA,KAAK,EAAEC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACjC,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACL,IAAI,CAAC,CAAC;EAEV,MAAMO,iBAAiB,GAAIC,KAAK,IAAK;IACnCP,OAAO,CAACO,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMC,aAAa,GAAIH,KAAK,IAAK;IAC/B,IAAIA,KAAK,CAACI,OAAO,KAAK,EAAE,EAAE;MACxBX,OAAO,CAACO,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IAC7B;EACF,CAAC;EAED,oBACEd,OAAA;IAAKiB,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnClB,OAAA;MAAQmB,EAAE,EAAC,QAAQ;MAACC,GAAG,EAAEd;IAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eACzCxB,OAAA;MACEmB,EAAE,EAAC,MAAM;MACTM,IAAI,EAAC,MAAM;MACXX,KAAK,EAAEV,IAAK;MACZsB,QAAQ,EAAEf,iBAAkB;MAC5BgB,SAAS,EAAEZ;IAAc;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACFxB,OAAA;MACEiB,SAAS,EAAC,2BAA2B;MACrCW,OAAO,EAAEA,CAAA,KAAMzB,QAAQ,CAAC,iBAAiB,CAAE;MAAAe,QAAA,EAC5C;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACtB,EAAA,CAzCQD,oBAAoB;EAAA,QACVJ,WAAW;AAAA;AAAAgC,EAAA,GADrB5B,oBAAoB;AA2C7B,eAAeA,oBAAoB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}