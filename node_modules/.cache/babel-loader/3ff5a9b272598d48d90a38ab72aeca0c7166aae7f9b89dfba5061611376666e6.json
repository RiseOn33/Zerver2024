{"ast":null,"code":"var _jsxFileName = \"/Users/justin/Desktop/Work/Zerver/my_app/src/StudentHome.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport Webcam from \"react-webcam\";\nimport { Button } from \"@mui/material\";\nimport jsQR from \"jsqr\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StudentHome() {\n  _s();\n  const webcamRef = useRef(null);\n  const [img, setImg] = useState(null);\n  const [qrCodeText, setQrCodeText] = useState(\"\");\n  useEffect(() => {\n    const interval = setInterval(() => {\n      capture();\n    }, 1000); // Set to capture every 1000 milliseconds (1 second)\n\n    return () => clearInterval(interval); // Clear the interval when the component unmounts\n  }, []);\n  const capture = () => {\n    // take screenshot\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImg(imageSrc);\n    if (imageSrc) {\n      // find qr code\n      const code = decodeQRFromImage(imageSrc);\n      if (code) {\n        setQrCodeText(code.data);\n      } else {\n        setQrCodeText(\"No QR code detected.\");\n      }\n    }\n  };\n  // qr code recognition\n  const decodeQRFromImage = imageSrc => {\n    const canvas = document.createElement(\"canvas\");\n    const ctx = canvas.getContext(\"2d\");\n    const image = new Image();\n    image.src = imageSrc;\n    image.onload = () => {\n      canvas.width = image.width;\n      canvas.height = image.height;\n      ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n      const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const code = jsQR(imageData.data, imageData.width, imageData.height, {\n        inversionAttempts: \"dontInvert\"\n      });\n      return code;\n    };\n  };\n  return (\n    /*#__PURE__*/\n    //webcam & button establishing\n    _jsxDEV(\"div\", {\n      style: {\n        position: \"relative\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        className: \"webcam\",\n        audio: false,\n        ref: webcamRef,\n        screenshotFormat: \"image/jpeg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: capture,\n        children: \"I'm Here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), img && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: img,\n        alt: \"Webcam Capture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }, this), qrCodeText && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: qrCodeText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(StudentHome, \"8Ej4PWYOTR7rUS1gK7LyG1S2Wms=\");\n_c = StudentHome;\nexport default StudentHome;\nvar _c;\n$RefreshReg$(_c, \"StudentHome\");","map":{"version":3,"names":["React","useRef","useState","Webcam","Button","jsQR","jsxDEV","_jsxDEV","StudentHome","_s","webcamRef","img","setImg","qrCodeText","setQrCodeText","useEffect","interval","setInterval","capture","clearInterval","imageSrc","current","getScreenshot","code","decodeQRFromImage","data","canvas","document","createElement","ctx","getContext","image","Image","src","onload","width","height","drawImage","imageData","getImageData","inversionAttempts","style","position","children","className","audio","ref","screenshotFormat","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","alt","_c","$RefreshReg$"],"sources":["/Users/justin/Desktop/Work/Zerver/my_app/src/StudentHome.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport Webcam from \"react-webcam\";\nimport { Button } from \"@mui/material\";\nimport jsQR from \"jsqr\";\nimport \"./App.css\";\n\nfunction StudentHome() {\n  const webcamRef = useRef(null);\n  const [img, setImg] = useState(null);\n  const [qrCodeText, setQrCodeText] = useState(\"\");\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      capture();\n    }, 1000); // Set to capture every 1000 milliseconds (1 second)\n\n    return () => clearInterval(interval); // Clear the interval when the component unmounts\n  }, []);\n\n  const capture = () => {\n    // take screenshot\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImg(imageSrc);\n\n    if (imageSrc) {\n      // find qr code\n      const code = decodeQRFromImage(imageSrc);\n      if (code) {\n        setQrCodeText(code.data);\n      } else {\n        setQrCodeText(\"No QR code detected.\");\n      }\n    }\n  };\n  // qr code recognition\n  const decodeQRFromImage = (imageSrc) => {\n    const canvas = document.createElement(\"canvas\");\n    const ctx = canvas.getContext(\"2d\");\n    const image = new Image();\n    image.src = imageSrc;\n    image.onload = () => {\n      canvas.width = image.width;\n      canvas.height = image.height;\n      ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n      const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const code = jsQR(imageData.data, imageData.width, imageData.height, {\n        inversionAttempts: \"dontInvert\",\n      });\n      return code;\n    };\n  };\n\n  return (\n    //webcam & button establishing\n    <div style={{ position: \"relative\" }}>\n      <Webcam\n        className=\"webcam\"\n        audio={false}\n        ref={webcamRef}\n        screenshotFormat=\"image/jpeg\"\n      />\n      <Button variant=\"contained\" onClick={capture}>\n        I'm Here\n      </Button>\n      {img && <img src={img} alt=\"Webcam Capture\" />}\n      {qrCodeText && <p>{qrCodeText}</p>}\n    </div>\n  );\n}\n\nexport default StudentHome;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}