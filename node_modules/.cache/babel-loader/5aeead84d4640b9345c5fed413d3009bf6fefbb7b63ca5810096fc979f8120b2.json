{"ast":null,"code":"var _jsxFileName = \"/Users/justin/Documents/Work/my_app/src/InstructorDone.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InstructorDone() {\n  _s();\n  const navigate = useNavigate();\n  const [text, setText] = useState(\"tokens from ZKP\"); // replace with the actual tokens\n  const [copyStatus, setCopyStatus] = useState(\"\");\n  const handleCopy = async () => {\n    try {\n      await navigator.clipboard.writeText(text);\n      setCopyStatus(\"Text copied!\");\n    } catch (err) {\n      setCopyStatus(\"Failed to copy text.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"InstructorDone\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"InstructorDone_Copy\",\n      onClick: handleCopy,\n      children: \"Copy Tokens to Clipboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: copyStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"InstructorDone_Back\",\n      onClick: () => navigate(\"/\"),\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(InstructorDone, \"g+gM4Wns+AQTK4dPiLZqefHjkdU=\", false, function () {\n  return [useNavigate];\n});\n_c = InstructorDone;\nexport default InstructorDone;\nvar _c;\n$RefreshReg$(_c, \"InstructorDone\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","InstructorDone","_s","navigate","text","setText","copyStatus","setCopyStatus","handleCopy","navigator","clipboard","writeText","err","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/justin/Documents/Work/my_app/src/InstructorDone.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction InstructorDone() {\n  const navigate = useNavigate();\n  const [text, setText] = useState(\"tokens from ZKP\"); // replace with the actual tokens\n  const [copyStatus, setCopyStatus] = useState(\"\");\n\n  const handleCopy = async () => {\n    try {\n      await navigator.clipboard.writeText(text);\n      setCopyStatus(\"Text copied!\");\n    } catch (err) {\n      setCopyStatus(\"Failed to copy text.\");\n    }\n  };\n\n  return (\n    <div className=\"InstructorDone\">\n      <button className=\"InstructorDone_Copy\" onClick={handleCopy}>\n        Copy Tokens to Clipboard\n      </button>\n      <p>{copyStatus}</p> {/* displays copy status message */}\n      <button className=\"InstructorDone_Back\" onClick={() => navigate(\"/\")}>\n        Done\n      </button>\n    </div>\n  );\n}\n\nexport default InstructorDone;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,iBAAiB,CAAC,CAAC,CAAC;EACrD,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,SAAS,CAACC,SAAS,CAACC,SAAS,CAACP,IAAI,CAAC;MACzCG,aAAa,CAAC,cAAc,CAAC;IAC/B,CAAC,CAAC,OAAOK,GAAG,EAAE;MACZL,aAAa,CAAC,sBAAsB,CAAC;IACvC;EACF,CAAC;EAED,oBACEP,OAAA;IAAKa,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7Bd,OAAA;MAAQa,SAAS,EAAC,qBAAqB;MAACE,OAAO,EAAEP,UAAW;MAAAM,QAAA,EAAC;IAE7D;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTnB,OAAA;MAAAc,QAAA,EAAIR;IAAU;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,KAAC,eACpBnB,OAAA;MAAQa,SAAS,EAAC,qBAAqB;MAACE,OAAO,EAAEA,CAAA,KAAMZ,QAAQ,CAAC,GAAG,CAAE;MAAAW,QAAA,EAAC;IAEtE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACjB,EAAA,CAzBQD,cAAc;EAAA,QACJH,WAAW;AAAA;AAAAsB,EAAA,GADrBnB,cAAc;AA2BvB,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}