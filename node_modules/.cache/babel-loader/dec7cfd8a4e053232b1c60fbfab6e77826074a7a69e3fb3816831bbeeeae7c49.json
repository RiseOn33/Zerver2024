{"ast":null,"code":"var _jsxFileName = \"/Users/justin/Desktop/Work/Zerver/my_app/src/StudentHome.js\",\n  _s = $RefreshSig$();\n// import React, { useRef, useState, useEffect } from \"react\";\n// import Webcam from \"react-webcam\";\n// import jsQR from \"jsqr\";\n\n// function StudentHome() {\n//   const webcamRef = useRef(null);\n//   const [scanResults, setScanResults] = useState([]);\n//   const [error, setError] = useState(\"\");\n\n//   useEffect(() => {\n//     checkPermissions();\n//     const interval = setInterval(() => {\n//       capture();\n//     }, 1000); // continuously capture every 1000 milliseconds (1 second)\n//     return () => clearInterval(interval); // Clear the interval when the component unmounts\n//   }, []);\n\n//   // Check for camera access permissions and handle errors\n//   const checkPermissions = async () => {\n//     try {\n//       await navigator.mediaDevices.getUserMedia({ video: true });\n//       // permissions granted\n//       setError(\"\");\n//     } catch (err) {\n//       console.error(\"Error accessing the camera: \", err);\n//       setError(\n//         \"Camera access was denied. Please allow camera permissions in your browser settings.\"\n//       );\n//     }\n//   };\n\n//   const capture = () => {\n//     const imageSrc = webcamRef.current.getScreenshot();\n//     if (imageSrc) {\n//       decodeQRFromImage(imageSrc);\n//     }\n//   };\n\n//   const decodeQRFromImage = (imageSrc) => {\n//     const canvas = document.createElement(\"canvas\");\n//     const ctx = canvas.getContext(\"2d\");\n//     const image = new Image();\n//     image.src = imageSrc;\n//     image.onload = () => {\n//       canvas.width = image.width;\n//       canvas.height = image.height;\n//       ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n//       const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n//       const code = jsQR(imageData.data, imageData.width, imageData.height, {\n//         inversionAttempts: \"dontInvert\",\n//       });\n//       if (code) {\n//         setScanResults((prevResults) => [\n//           ...prevResults,\n//           `QR Code Detected: ${code.data}`,\n//         ]);\n//       }\n//     };\n//   };\n\n//   return (\n//     <div style={{ position: \"relative\" }}>\n//       {error ? (\n//         <div className=\"error\">{error}</div>\n//       ) : (\n//         <Webcam\n//           className=\"webcam\"\n//           audio={false}\n//           ref={webcamRef}\n//           screenshotFormat=\"image/jpeg\"\n//           videoConstraints={{\n//             //determine whether on mobile or laptop for camera selection\n//             facingMode:\n//               window.innerWidth < 768 ? { exact: \"environment\" } : \"user\",\n//           }}\n//         />\n//       )}\n//       <div>\n//         {scanResults.map((result, index) => (\n//           <p key={index}>{result}</p> // Display each successful QR code detection\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default StudentHome;\n\n// import React, { useRef, useState, useEffect } from \"react\";\n// import Camera from \"react-camera-pro\";\n\n// function StudentHome() {\n//   const cameraRef = useRef(null);\n//   const [error, setError] = useState(\"\");\n//   const [deviceInfo, setDeviceInfo] = useState(\"\"); // For storing device camera info\n\n//   useEffect(() => {\n//     checkPermissions();\n//   }, []);\n\n//   const checkPermissions = async () => {\n//     try {\n//       const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n//       // Log available devices\n//       navigator.mediaDevices.enumerateDevices().then((devices) => {\n//         const videoDevices = devices.filter(\n//           (device) => device.kind === \"videoinput\"\n//         );\n//         setDeviceInfo(videoDevices.map((device) => device.label).join(\", \"));\n//       });\n//       setError(\"\"); // Clear any previous errors\n//       // Set stream to test direct streaming without react-webcam\n//       if (cameraRef.current) {\n//         cameraRef.current.srcObject = stream;\n//       }\n//     } catch (err) {\n//       console.error(\"Error accessing the camera: \", err);\n//       setError(\n//         \"Camera access was denied or not available. Check camera permissions and device settings.\"\n//       );\n//     }\n//   };\n\n//   return (\n//     <div style={{ position: \"relative\" }}>\n//       {error && <div className=\"error\">{error}</div>}\n//       {!error && (\n//         <Camera\n//           className=\"Camera\"\n//           audio={false}\n//           ref={cameraRef}\n//           screenshotFormat=\"image/jpeg\"\n//           videoConstraints={{\n//             facingMode:\n//               window.innerWidth < 768 ? { exact: \"environment\" } : \"user\",\n//           }}\n//         />\n//       )}\n//       {deviceInfo && <p>Detected Video Input Devices: {deviceInfo}</p>}\n//     </div>\n//   );\n// }\n\n// export default StudentHome;\n\nimport React, { useState, useEffect } from \"react\";\nimport Camera from \"react-camera-pro\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StudentHome() {\n  _s();\n  const [error, setError] = useState(\"\");\n  const [deviceInfo, setDeviceInfo] = useState(\"\"); // Stores device camera info\n\n  useEffect(() => {\n    checkPermissionsAndDevices();\n  }, []);\n  const checkPermissionsAndDevices = async () => {\n    try {\n      await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      // Successfully got permissions, now enumerate devices\n      navigator.mediaDevices.enumerateDevices().then(devices => {\n        const videoDevices = devices.filter(device => device.kind === \"videoinput\");\n        setDeviceInfo(videoDevices.map(device => device.label).join(\", \"));\n      });\n      setError(\"\"); // Clear any previous errors only if permissions are granted\n    } catch (err) {\n      console.error(\"Error accessing the camera: \", err);\n      setError(\"Camera access was denied or not available. Check camera permissions and device settings.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    children: [error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Camera, {\n      audio: false,\n      screenshotFormat: \"image/jpeg\",\n      videoConstraints: {\n        facingMode: window.innerWidth < 768 ? \"environment\" : \"user\"\n      },\n      onTakePhoto: dataUri => {\n        // Optional: Handle the photo taken with dataUri\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this), deviceInfo && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Detected Video Input Devices: \", deviceInfo]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n}\n_s(StudentHome, \"BsG+vngLskgnwgXsGYj6m8kk0FU=\");\n_c = StudentHome;\nexport default StudentHome;\nvar _c;\n$RefreshReg$(_c, \"StudentHome\");","map":{"version":3,"names":["React","useState","useEffect","Camera","jsxDEV","_jsxDEV","StudentHome","_s","error","setError","deviceInfo","setDeviceInfo","checkPermissionsAndDevices","navigator","mediaDevices","getUserMedia","video","enumerateDevices","then","devices","videoDevices","filter","device","kind","map","label","join","err","console","style","position","children","className","fileName","_jsxFileName","lineNumber","columnNumber","audio","screenshotFormat","videoConstraints","facingMode","window","innerWidth","onTakePhoto","dataUri","_c","$RefreshReg$"],"sources":["/Users/justin/Desktop/Work/Zerver/my_app/src/StudentHome.js"],"sourcesContent":["// import React, { useRef, useState, useEffect } from \"react\";\n// import Webcam from \"react-webcam\";\n// import jsQR from \"jsqr\";\n\n// function StudentHome() {\n//   const webcamRef = useRef(null);\n//   const [scanResults, setScanResults] = useState([]);\n//   const [error, setError] = useState(\"\");\n\n//   useEffect(() => {\n//     checkPermissions();\n//     const interval = setInterval(() => {\n//       capture();\n//     }, 1000); // continuously capture every 1000 milliseconds (1 second)\n//     return () => clearInterval(interval); // Clear the interval when the component unmounts\n//   }, []);\n\n//   // Check for camera access permissions and handle errors\n//   const checkPermissions = async () => {\n//     try {\n//       await navigator.mediaDevices.getUserMedia({ video: true });\n//       // permissions granted\n//       setError(\"\");\n//     } catch (err) {\n//       console.error(\"Error accessing the camera: \", err);\n//       setError(\n//         \"Camera access was denied. Please allow camera permissions in your browser settings.\"\n//       );\n//     }\n//   };\n\n//   const capture = () => {\n//     const imageSrc = webcamRef.current.getScreenshot();\n//     if (imageSrc) {\n//       decodeQRFromImage(imageSrc);\n//     }\n//   };\n\n//   const decodeQRFromImage = (imageSrc) => {\n//     const canvas = document.createElement(\"canvas\");\n//     const ctx = canvas.getContext(\"2d\");\n//     const image = new Image();\n//     image.src = imageSrc;\n//     image.onload = () => {\n//       canvas.width = image.width;\n//       canvas.height = image.height;\n//       ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n//       const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n//       const code = jsQR(imageData.data, imageData.width, imageData.height, {\n//         inversionAttempts: \"dontInvert\",\n//       });\n//       if (code) {\n//         setScanResults((prevResults) => [\n//           ...prevResults,\n//           `QR Code Detected: ${code.data}`,\n//         ]);\n//       }\n//     };\n//   };\n\n//   return (\n//     <div style={{ position: \"relative\" }}>\n//       {error ? (\n//         <div className=\"error\">{error}</div>\n//       ) : (\n//         <Webcam\n//           className=\"webcam\"\n//           audio={false}\n//           ref={webcamRef}\n//           screenshotFormat=\"image/jpeg\"\n//           videoConstraints={{\n//             //determine whether on mobile or laptop for camera selection\n//             facingMode:\n//               window.innerWidth < 768 ? { exact: \"environment\" } : \"user\",\n//           }}\n//         />\n//       )}\n//       <div>\n//         {scanResults.map((result, index) => (\n//           <p key={index}>{result}</p> // Display each successful QR code detection\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default StudentHome;\n\n// import React, { useRef, useState, useEffect } from \"react\";\n// import Camera from \"react-camera-pro\";\n\n// function StudentHome() {\n//   const cameraRef = useRef(null);\n//   const [error, setError] = useState(\"\");\n//   const [deviceInfo, setDeviceInfo] = useState(\"\"); // For storing device camera info\n\n//   useEffect(() => {\n//     checkPermissions();\n//   }, []);\n\n//   const checkPermissions = async () => {\n//     try {\n//       const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n//       // Log available devices\n//       navigator.mediaDevices.enumerateDevices().then((devices) => {\n//         const videoDevices = devices.filter(\n//           (device) => device.kind === \"videoinput\"\n//         );\n//         setDeviceInfo(videoDevices.map((device) => device.label).join(\", \"));\n//       });\n//       setError(\"\"); // Clear any previous errors\n//       // Set stream to test direct streaming without react-webcam\n//       if (cameraRef.current) {\n//         cameraRef.current.srcObject = stream;\n//       }\n//     } catch (err) {\n//       console.error(\"Error accessing the camera: \", err);\n//       setError(\n//         \"Camera access was denied or not available. Check camera permissions and device settings.\"\n//       );\n//     }\n//   };\n\n//   return (\n//     <div style={{ position: \"relative\" }}>\n//       {error && <div className=\"error\">{error}</div>}\n//       {!error && (\n//         <Camera\n//           className=\"Camera\"\n//           audio={false}\n//           ref={cameraRef}\n//           screenshotFormat=\"image/jpeg\"\n//           videoConstraints={{\n//             facingMode:\n//               window.innerWidth < 768 ? { exact: \"environment\" } : \"user\",\n//           }}\n//         />\n//       )}\n//       {deviceInfo && <p>Detected Video Input Devices: {deviceInfo}</p>}\n//     </div>\n//   );\n// }\n\n// export default StudentHome;\n\nimport React, { useState, useEffect } from \"react\";\nimport Camera from \"react-camera-pro\";\n\nfunction StudentHome() {\n  const [error, setError] = useState(\"\");\n  const [deviceInfo, setDeviceInfo] = useState(\"\"); // Stores device camera info\n\n  useEffect(() => {\n    checkPermissionsAndDevices();\n  }, []);\n\n  const checkPermissionsAndDevices = async () => {\n    try {\n      await navigator.mediaDevices.getUserMedia({ video: true });\n      // Successfully got permissions, now enumerate devices\n      navigator.mediaDevices.enumerateDevices().then((devices) => {\n        const videoDevices = devices.filter(\n          (device) => device.kind === \"videoinput\"\n        );\n        setDeviceInfo(videoDevices.map((device) => device.label).join(\", \"));\n      });\n      setError(\"\"); // Clear any previous errors only if permissions are granted\n    } catch (err) {\n      console.error(\"Error accessing the camera: \", err);\n      setError(\n        \"Camera access was denied or not available. Check camera permissions and device settings.\"\n      );\n    }\n  };\n\n  return (\n    <div style={{ position: \"relative\" }}>\n      {error ? (\n        <div className=\"error\">{error}</div>\n      ) : (\n        <Camera\n          audio={false}\n          screenshotFormat=\"image/jpeg\"\n          videoConstraints={{\n            facingMode: window.innerWidth < 768 ? \"environment\" : \"user\",\n          }}\n          onTakePhoto={(dataUri) => {\n            // Optional: Handle the photo taken with dataUri\n          }}\n        />\n      )}\n      {deviceInfo && <p>Detected Video Input Devices: {deviceInfo}</p>}\n    </div>\n  );\n}\n\nexport default StudentHome;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAElDC,SAAS,CAAC,MAAM;IACdU,0BAA0B,CAAC,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,0BAA0B,GAAG,MAAAA,CAAA,KAAY;IAC7C,IAAI;MACF,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;QAAEC,KAAK,EAAE;MAAK,CAAC,CAAC;MAC1D;MACAH,SAAS,CAACC,YAAY,CAACG,gBAAgB,CAAC,CAAC,CAACC,IAAI,CAAEC,OAAO,IAAK;QAC1D,MAAMC,YAAY,GAAGD,OAAO,CAACE,MAAM,CAChCC,MAAM,IAAKA,MAAM,CAACC,IAAI,KAAK,YAC9B,CAAC;QACDZ,aAAa,CAACS,YAAY,CAACI,GAAG,CAAEF,MAAM,IAAKA,MAAM,CAACG,KAAK,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;MACtE,CAAC,CAAC;MACFjB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOkB,GAAG,EAAE;MACZC,OAAO,CAACpB,KAAK,CAAC,8BAA8B,EAAEmB,GAAG,CAAC;MAClDlB,QAAQ,CACN,0FACF,CAAC;IACH;EACF,CAAC;EAED,oBACEJ,OAAA;IAAKwB,KAAK,EAAE;MAAEC,QAAQ,EAAE;IAAW,CAAE;IAAAC,QAAA,GAClCvB,KAAK,gBACJH,OAAA;MAAK2B,SAAS,EAAC,OAAO;MAAAD,QAAA,EAAEvB;IAAK;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,gBAEpC/B,OAAA,CAACF,MAAM;MACLkC,KAAK,EAAE,KAAM;MACbC,gBAAgB,EAAC,YAAY;MAC7BC,gBAAgB,EAAE;QAChBC,UAAU,EAAEC,MAAM,CAACC,UAAU,GAAG,GAAG,GAAG,aAAa,GAAG;MACxD,CAAE;MACFC,WAAW,EAAGC,OAAO,IAAK;QACxB;MAAA;IACA;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACF,EACA1B,UAAU,iBAAIL,OAAA;MAAA0B,QAAA,GAAG,gCAA8B,EAACrB,UAAU;IAAA;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7D,CAAC;AAEV;AAAC7B,EAAA,CA9CQD,WAAW;AAAAuC,EAAA,GAAXvC,WAAW;AAgDpB,eAAeA,WAAW;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}