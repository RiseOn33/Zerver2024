{"ast":null,"code":"var _jsxFileName = \"/Users/justin/Desktop/Work/Zerver/my_app/src/StudentHome.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport Webcam from \"react-webcam\";\nimport jsQR from \"jsqr\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StudentHome() {\n  _s();\n  const webcamRef = useRef(null);\n  const [scanResults, setScanResults] = useState([]);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    checkPermissions();\n    const interval = setInterval(() => {\n      capture();\n    }, 1000); // continuously capture every 1000 milliseconds (1 second)\n    return () => clearInterval(interval); // Clear the interval when the component unmounts\n  }, []);\n\n  // Check for camera access permissions and handle errors\n  const checkPermissions = async () => {\n    try {\n      await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      // permissions granted\n      setError(\"\");\n    } catch (err) {\n      console.error(\"Error accessing the camera: \", err);\n      setError(\"Camera access was denied. Please allow camera permissions in your browser settings.\");\n    }\n  };\n  const capture = () => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    if (imageSrc) {\n      decodeQRFromImage(imageSrc);\n    }\n  };\n  const decodeQRFromImage = imageSrc => {\n    const canvas = document.createElement(\"canvas\");\n    const ctx = canvas.getContext(\"2d\");\n    const image = new Image();\n    image.src = imageSrc;\n    image.onload = () => {\n      canvas.width = image.width;\n      canvas.height = image.height;\n      ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n      const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const code = jsQR(imageData.data, imageData.width, imageData.height, {\n        inversionAttempts: \"dontInvert\"\n      });\n      if (code) {\n        setScanResults(prevResults => [...prevResults, `QR Code Detected: ${code.data}`]);\n      }\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    children: [error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Webcam, {\n      className: \"webcam\",\n      audio: false,\n      ref: webcamRef,\n      screenshotFormat: \"image/jpeg\",\n      videoConstraints: {\n        //determine whether on mobile or laptop for camera selection\n        facingMode: window.innerWidth < 768 ? {\n          exact: \"environment\"\n        } : \"user\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: scanResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: result\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this) // Display each successful QR code detection\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(StudentHome, \"vl8tmWsKuoWewBFv8KpxRFgsmI8=\");\n_c = StudentHome;\nexport default StudentHome;\n\n//\n//\n//\n// import React, { useRef, useState, useEffect } from \"react\";\n// import Camera from \"react-camera-pro\";\n\n// function StudentHome() {\n//   const cameraRef = useRef(null);\n//   const [error, setError] = useState(\"\");\n//   const [deviceInfo, setDeviceInfo] = useState(\"\"); // For storing device camera info\n\n//   useEffect(() => {\n//     checkPermissions();\n//   }, []);\n\n//   const checkPermissions = async () => {\n//     try {\n//       const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n//       // Log available devices\n//       navigator.mediaDevices.enumerateDevices().then((devices) => {\n//         const videoDevices = devices.filter(\n//           (device) => device.kind === \"videoinput\"\n//         );\n//         setDeviceInfo(videoDevices.map((device) => device.label).join(\", \"));\n//       });\n//       setError(\"\"); // Clear any previous errors\n//       // Set stream to test direct streaming without react-webcam\n//       if (cameraRef.current) {\n//         cameraRef.current.srcObject = stream;\n//       }\n//     } catch (err) {\n//       console.error(\"Error accessing the camera: \", err);\n//       setError(\n//         \"Camera access was denied or not available. Check camera permissions and device settings.\"\n//       );\n//     }\n//   };\n\n//   return (\n//     <div style={{ position: \"relative\" }}>\n//       {error && <div className=\"error\">{error}</div>}\n//       {!error && (\n//         <Camera\n//           className=\"Camera\"\n//           audio={false}\n//           ref={cameraRef}\n//           screenshotFormat=\"image/jpeg\"\n//           videoConstraints={{\n//             facingMode:\n//               window.innerWidth < 768 ? { exact: \"environment\" } : \"user\",\n//           }}\n//         />\n//       )}\n//       {deviceInfo && <p>Detected Video Input Devices: {deviceInfo}</p>}\n//     </div>\n//   );\n// }\n\n// export default StudentHome;\n\n// import React, { useState, useEffect } from \"react\";\n// import { Camera } from \"react-camera-pro\";\n\n// function StudentHome() {\n//   const [error, setError] = useState(\"\");\n//   const [deviceInfo, setDeviceInfo] = useState(\"\"); // Stores device camera info\n\n//   useEffect(() => {\n//     checkPermissionsAndDevices();\n//   }, []);\n\n//   const checkPermissionsAndDevices = async () => {\n//     try {\n//       await navigator.mediaDevices.getUserMedia({ video: true });\n//       // Successfully got permissions, now enumerate devices\n//       navigator.mediaDevices.enumerateDevices().then((devices) => {\n//         const videoDevices = devices.filter(\n//           (device) => device.kind === \"videoinput\"\n//         );\n//         setDeviceInfo(videoDevices.map((device) => device.label).join(\", \"));\n//       });\n//       setError(\"\"); // Clear any previous errors only if permissions are granted\n//     } catch (err) {\n//       console.error(\"Error accessing the camera: \", err);\n//       setError(\n//         \"Camera access was denied or not available. Check camera permissions and device settings.\"\n//       );\n//     }\n//   };\n\n//   return (\n//     <div style={{ position: \"relative\" }}>\n//       {error ? (\n//         <div className=\"error\">{error}</div>\n//       ) : (\n//         <Camera\n//           audio={false}\n//           screenshotFormat=\"image/jpeg\"\n//           videoConstraints={{\n//             facingMode: window.innerWidth < 768 ? \"environment\" : \"user\",\n//           }}\n//           onTakePhoto={(dataUri) => {\n//             // Optional: Handle the photo taken with dataUri\n//           }}\n//         />\n//       )}\n//       {deviceInfo && <p>Detected Video Input Devices: {deviceInfo}</p>}\n//     </div>\n//   );\n// }\n\n// export default StudentHome;\nvar _c;\n$RefreshReg$(_c, \"StudentHome\");","map":{"version":3,"names":["React","useRef","useState","useEffect","Webcam","jsQR","jsxDEV","_jsxDEV","StudentHome","_s","webcamRef","scanResults","setScanResults","error","setError","checkPermissions","interval","setInterval","capture","clearInterval","navigator","mediaDevices","getUserMedia","video","err","console","imageSrc","current","getScreenshot","decodeQRFromImage","canvas","document","createElement","ctx","getContext","image","Image","src","onload","width","height","drawImage","imageData","getImageData","code","data","inversionAttempts","prevResults","style","position","children","className","fileName","_jsxFileName","lineNumber","columnNumber","audio","ref","screenshotFormat","videoConstraints","facingMode","window","innerWidth","exact","map","result","index","_c","$RefreshReg$"],"sources":["/Users/justin/Desktop/Work/Zerver/my_app/src/StudentHome.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport Webcam from \"react-webcam\";\nimport jsQR from \"jsqr\";\n\nfunction StudentHome() {\n  const webcamRef = useRef(null);\n  const [scanResults, setScanResults] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    checkPermissions();\n    const interval = setInterval(() => {\n      capture();\n    }, 1000); // continuously capture every 1000 milliseconds (1 second)\n    return () => clearInterval(interval); // Clear the interval when the component unmounts\n  }, []);\n\n  // Check for camera access permissions and handle errors\n  const checkPermissions = async () => {\n    try {\n      await navigator.mediaDevices.getUserMedia({ video: true });\n      // permissions granted\n      setError(\"\");\n    } catch (err) {\n      console.error(\"Error accessing the camera: \", err);\n      setError(\n        \"Camera access was denied. Please allow camera permissions in your browser settings.\"\n      );\n    }\n  };\n\n  const capture = () => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    if (imageSrc) {\n      decodeQRFromImage(imageSrc);\n    }\n  };\n\n  const decodeQRFromImage = (imageSrc) => {\n    const canvas = document.createElement(\"canvas\");\n    const ctx = canvas.getContext(\"2d\");\n    const image = new Image();\n    image.src = imageSrc;\n    image.onload = () => {\n      canvas.width = image.width;\n      canvas.height = image.height;\n      ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n      const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const code = jsQR(imageData.data, imageData.width, imageData.height, {\n        inversionAttempts: \"dontInvert\",\n      });\n      if (code) {\n        setScanResults((prevResults) => [\n          ...prevResults,\n          `QR Code Detected: ${code.data}`,\n        ]);\n      }\n    };\n  };\n\n  return (\n    <div style={{ position: \"relative\" }}>\n      {error ? (\n        <div className=\"error\">{error}</div>\n      ) : (\n        <Webcam\n          className=\"webcam\"\n          audio={false}\n          ref={webcamRef}\n          screenshotFormat=\"image/jpeg\"\n          videoConstraints={{\n            //determine whether on mobile or laptop for camera selection\n            facingMode:\n              window.innerWidth < 768 ? { exact: \"environment\" } : \"user\",\n          }}\n        />\n      )}\n      <div>\n        {scanResults.map((result, index) => (\n          <p key={index}>{result}</p> // Display each successful QR code detection\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default StudentHome;\n\n//\n//\n//\n// import React, { useRef, useState, useEffect } from \"react\";\n// import Camera from \"react-camera-pro\";\n\n// function StudentHome() {\n//   const cameraRef = useRef(null);\n//   const [error, setError] = useState(\"\");\n//   const [deviceInfo, setDeviceInfo] = useState(\"\"); // For storing device camera info\n\n//   useEffect(() => {\n//     checkPermissions();\n//   }, []);\n\n//   const checkPermissions = async () => {\n//     try {\n//       const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n//       // Log available devices\n//       navigator.mediaDevices.enumerateDevices().then((devices) => {\n//         const videoDevices = devices.filter(\n//           (device) => device.kind === \"videoinput\"\n//         );\n//         setDeviceInfo(videoDevices.map((device) => device.label).join(\", \"));\n//       });\n//       setError(\"\"); // Clear any previous errors\n//       // Set stream to test direct streaming without react-webcam\n//       if (cameraRef.current) {\n//         cameraRef.current.srcObject = stream;\n//       }\n//     } catch (err) {\n//       console.error(\"Error accessing the camera: \", err);\n//       setError(\n//         \"Camera access was denied or not available. Check camera permissions and device settings.\"\n//       );\n//     }\n//   };\n\n//   return (\n//     <div style={{ position: \"relative\" }}>\n//       {error && <div className=\"error\">{error}</div>}\n//       {!error && (\n//         <Camera\n//           className=\"Camera\"\n//           audio={false}\n//           ref={cameraRef}\n//           screenshotFormat=\"image/jpeg\"\n//           videoConstraints={{\n//             facingMode:\n//               window.innerWidth < 768 ? { exact: \"environment\" } : \"user\",\n//           }}\n//         />\n//       )}\n//       {deviceInfo && <p>Detected Video Input Devices: {deviceInfo}</p>}\n//     </div>\n//   );\n// }\n\n// export default StudentHome;\n\n// import React, { useState, useEffect } from \"react\";\n// import { Camera } from \"react-camera-pro\";\n\n// function StudentHome() {\n//   const [error, setError] = useState(\"\");\n//   const [deviceInfo, setDeviceInfo] = useState(\"\"); // Stores device camera info\n\n//   useEffect(() => {\n//     checkPermissionsAndDevices();\n//   }, []);\n\n//   const checkPermissionsAndDevices = async () => {\n//     try {\n//       await navigator.mediaDevices.getUserMedia({ video: true });\n//       // Successfully got permissions, now enumerate devices\n//       navigator.mediaDevices.enumerateDevices().then((devices) => {\n//         const videoDevices = devices.filter(\n//           (device) => device.kind === \"videoinput\"\n//         );\n//         setDeviceInfo(videoDevices.map((device) => device.label).join(\", \"));\n//       });\n//       setError(\"\"); // Clear any previous errors only if permissions are granted\n//     } catch (err) {\n//       console.error(\"Error accessing the camera: \", err);\n//       setError(\n//         \"Camera access was denied or not available. Check camera permissions and device settings.\"\n//       );\n//     }\n//   };\n\n//   return (\n//     <div style={{ position: \"relative\" }}>\n//       {error ? (\n//         <div className=\"error\">{error}</div>\n//       ) : (\n//         <Camera\n//           audio={false}\n//           screenshotFormat=\"image/jpeg\"\n//           videoConstraints={{\n//             facingMode: window.innerWidth < 768 ? \"environment\" : \"user\",\n//           }}\n//           onTakePhoto={(dataUri) => {\n//             // Optional: Handle the photo taken with dataUri\n//           }}\n//         />\n//       )}\n//       {deviceInfo && <p>Detected Video Input Devices: {deviceInfo}</p>}\n//     </div>\n//   );\n// }\n\n// export default StudentHome;\n"],"mappings":"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KAAK,kBAC7B3D,OAAA;QAAA2C,QAAA,EAAgBe;MAAM,GAAdC,KAAK;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,CAAC;MAC7B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC9C,EAAA,CAhFQD,WAAW;AAAA2D,EAAA,GAAX3D,WAAW;AAkFpB,eAAeA,WAAW;;AAE1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA2D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}