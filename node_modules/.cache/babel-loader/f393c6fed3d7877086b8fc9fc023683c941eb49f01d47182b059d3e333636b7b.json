{"ast":null,"code":"import React,{useState,useEffect,useRef}from\"react\";import{useNavigate}from\"react-router-dom\";import QRCode from\"qrcode\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function InstructorAttendance(){const navigate=useNavigate();const[text,setText]=useState(\"\");const qrRef=useRef();useEffect(()=>{if(qrRef.current&&text){QRCode.toCanvas(qrRef.current,text,error=>{if(error)console.error(error);});}},[text]);const handleInputChange=event=>{setText(event.target.value);};const handleKeyDown=event=>{if(event.keyCode===13){setText(event.target.value);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"InstructorAttendance\",children:[/*#__PURE__*/_jsx(\"canvas\",{id:\"qrcode\",ref:qrRef}),/*#__PURE__*/_jsx(\"input\",{id:\"text\",type:\"text\",value:text,onChange:handleInputChange,onKeyDown:handleKeyDown}),/*#__PURE__*/_jsx(\"button\",{className:\"InstructorAttendance_Done\",onClick:()=>navigate(\"/InstructorHome\"),children:\"Cancel\"})]});}export default InstructorAttendance;//testing api\n// URL of the API endpoint\nconst apiUrl=\"http://10.100.178.140:5000/items\";// Function to make the GET request\nasync function fetchData(){try{const response=await fetch(apiUrl);// Check if the request was successful\nif(!response.ok){throw new Error(\"Network response was not ok \"+response.statusText);}// Parse the JSON from the response\nconst data=await response.json();// Handle the data (e.g., update the UI)\nconsole.log(data);}catch(error){// Handle any errors\nconsole.error(\"There was a problem with the fetch operation:\",error);}}// Call the function to fetch data\nfetchData();","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","QRCode","jsx","_jsx","jsxs","_jsxs","InstructorAttendance","navigate","text","setText","qrRef","current","toCanvas","error","console","handleInputChange","event","target","value","handleKeyDown","keyCode","className","children","id","ref","type","onChange","onKeyDown","onClick","apiUrl","fetchData","response","fetch","ok","Error","statusText","data","json","log"],"sources":["/Users/justin/Desktop/Work/my_app/src/InstructorAttendance.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport QRCode from \"qrcode\";\n\nfunction InstructorAttendance() {\n  const navigate = useNavigate();\n  const [text, setText] = useState(\"\");\n  const qrRef = useRef();\n\n  useEffect(() => {\n    if (qrRef.current && text) {\n      QRCode.toCanvas(qrRef.current, text, (error) => {\n        if (error) console.error(error);\n      });\n    }\n  }, [text]);\n\n  const handleInputChange = (event) => {\n    setText(event.target.value);\n  };\n\n  const handleKeyDown = (event) => {\n    if (event.keyCode === 13) {\n      setText(event.target.value);\n    }\n  };\n\n  return (\n    <div className=\"InstructorAttendance\">\n      <canvas id=\"qrcode\" ref={qrRef}></canvas>\n      <input\n        id=\"text\"\n        type=\"text\"\n        value={text}\n        onChange={handleInputChange}\n        onKeyDown={handleKeyDown}\n      />\n      <button\n        className=\"InstructorAttendance_Done\"\n        onClick={() => navigate(\"/InstructorHome\")}\n      >\n        Cancel\n      </button>\n    </div>\n  );\n}\n\nexport default InstructorAttendance;\n\n//testing api\n\n// URL of the API endpoint\nconst apiUrl = \"http://10.100.178.140:5000/items\";\n\n// Function to make the GET request\nasync function fetchData() {\n  try {\n    const response = await fetch(apiUrl);\n\n    // Check if the request was successful\n    if (!response.ok) {\n      throw new Error(\"Network response was not ok \" + response.statusText);\n    }\n\n    // Parse the JSON from the response\n    const data = await response.json();\n\n    // Handle the data (e.g., update the UI)\n    console.log(data);\n  } catch (error) {\n    // Handle any errors\n    console.error(\"There was a problem with the fetch operation:\", error);\n  }\n}\n\n// Call the function to fetch data\nfetchData();\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAC1D,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,CAAAC,MAAM,KAAM,QAAQ,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE5B,QAAS,CAAAC,oBAAoBA,CAAA,CAAG,CAC9B,KAAM,CAAAC,QAAQ,CAAGP,WAAW,CAAC,CAAC,CAC9B,KAAM,CAACQ,IAAI,CAAEC,OAAO,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAAAa,KAAK,CAAGX,MAAM,CAAC,CAAC,CAEtBD,SAAS,CAAC,IAAM,CACd,GAAIY,KAAK,CAACC,OAAO,EAAIH,IAAI,CAAE,CACzBP,MAAM,CAACW,QAAQ,CAACF,KAAK,CAACC,OAAO,CAAEH,IAAI,CAAGK,KAAK,EAAK,CAC9C,GAAIA,KAAK,CAAEC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CACjC,CAAC,CAAC,CACJ,CACF,CAAC,CAAE,CAACL,IAAI,CAAC,CAAC,CAEV,KAAM,CAAAO,iBAAiB,CAAIC,KAAK,EAAK,CACnCP,OAAO,CAACO,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAC7B,CAAC,CAED,KAAM,CAAAC,aAAa,CAAIH,KAAK,EAAK,CAC/B,GAAIA,KAAK,CAACI,OAAO,GAAK,EAAE,CAAE,CACxBX,OAAO,CAACO,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAC7B,CACF,CAAC,CAED,mBACEb,KAAA,QAAKgB,SAAS,CAAC,sBAAsB,CAAAC,QAAA,eACnCnB,IAAA,WAAQoB,EAAE,CAAC,QAAQ,CAACC,GAAG,CAAEd,KAAM,CAAS,CAAC,cACzCP,IAAA,UACEoB,EAAE,CAAC,MAAM,CACTE,IAAI,CAAC,MAAM,CACXP,KAAK,CAAEV,IAAK,CACZkB,QAAQ,CAAEX,iBAAkB,CAC5BY,SAAS,CAAER,aAAc,CAC1B,CAAC,cACFhB,IAAA,WACEkB,SAAS,CAAC,2BAA2B,CACrCO,OAAO,CAAEA,CAAA,GAAMrB,QAAQ,CAAC,iBAAiB,CAAE,CAAAe,QAAA,CAC5C,QAED,CAAQ,CAAC,EACN,CAAC,CAEV,CAEA,cAAe,CAAAhB,oBAAoB,CAEnC;AAEA;AACA,KAAM,CAAAuB,MAAM,CAAG,kCAAkC,CAEjD;AACA,cAAe,CAAAC,SAASA,CAAA,CAAG,CACzB,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACH,MAAM,CAAC,CAEpC;AACA,GAAI,CAACE,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,8BAA8B,CAAGH,QAAQ,CAACI,UAAU,CAAC,CACvE,CAEA;AACA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAL,QAAQ,CAACM,IAAI,CAAC,CAAC,CAElC;AACAvB,OAAO,CAACwB,GAAG,CAACF,IAAI,CAAC,CACnB,CAAE,MAAOvB,KAAK,CAAE,CACd;AACAC,OAAO,CAACD,KAAK,CAAC,+CAA+C,CAAEA,KAAK,CAAC,CACvE,CACF,CAEA;AACAiB,SAAS,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}