{"ast":null,"code":"var _jsxFileName = \"/Users/justin/Documents/Work/my_app/src/InstructorAttendance.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport QRCode from \"qrcode\";\nimport \"./App.css\"; // Make sure to import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InstructorAttendance() {\n  _s();\n  const navigate = useNavigate();\n  const [text, setText] = useState(\"Hello, World!\");\n  const qrRef = useRef();\n  useEffect(() => {\n    if (qrRef.current && text) {\n      const canvas = qrRef.current;\n      const size = Math.min(window.innerWidth, window.innerHeight);\n      canvas.width = size;\n      canvas.height = size;\n      QRCode.toCanvas(canvas, text, {\n        colorDark: \"#000000\",\n        colorLight: \"#ffffff\",\n        correctLevel: QRCode.CorrectLevel || 1 // Default to 1 if CorrectLevel is undefined\n      }, error => {\n        if (error) console.error(error);\n      });\n    }\n  }, [text]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"InstructorAttendance\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"qrcode\",\n      ref: qrRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"InstructorAttendance_Done\",\n        onClick: () => navigate(\"/InstructorHome\"),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"InstructorAttendance_Finish\",\n        onClick: () => navigate(\"/InstructorDone\"),\n        children: \"Finish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(InstructorAttendance, \"BCLguPyxbCdz0qGzuaZ2scZKFFk=\", false, function () {\n  return [useNavigate];\n});\n_c = InstructorAttendance;\nexport default InstructorAttendance;\n\n// // URL of the API endpoint -- code for pulling from a qr code\n// const apiUrl = \"http://10.100.178.140:5000/items\";\n\n// useEffect(() => {\n//   async function fetchData() {\n//     try {\n//       const response = await fetch(apiUrl);\n\n//       // Check if the request was successful\n//       if (!response.ok) {\n//         throw new Error(\"Network response was not ok \" + response.statusText);\n//       }\n\n//       // Parse the JSON from the response\n//       const data = await response.json();\n\n//       // Use the data to generate the QR code\n//       setText(JSON.stringify(data)); // Assuming data is an object; you may need to adjust this based on your API response\n//     } catch (error) {\n//       // Handle any errors\n//       console.error(\"There was a problem with the fetch operation:\", error);\n//     }\n//   }\n\n//   fetchData();\n// }, [apiUrl]);\nvar _c;\n$RefreshReg$(_c, \"InstructorAttendance\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","QRCode","jsxDEV","_jsxDEV","InstructorAttendance","_s","navigate","text","setText","qrRef","current","canvas","size","Math","min","window","innerWidth","innerHeight","width","height","toCanvas","colorDark","colorLight","correctLevel","CorrectLevel","error","console","className","children","id","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/justin/Documents/Work/my_app/src/InstructorAttendance.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport QRCode from \"qrcode\";\nimport \"./App.css\"; // Make sure to import the CSS file\n\nfunction InstructorAttendance() {\n  const navigate = useNavigate();\n  const [text, setText] = useState(\"Hello, World!\");\n  const qrRef = useRef();\n\n  useEffect(() => {\n    if (qrRef.current && text) {\n      const canvas = qrRef.current;\n      const size = Math.min(window.innerWidth, window.innerHeight);\n      canvas.width = size;\n      canvas.height = size;\n\n      QRCode.toCanvas(\n        canvas,\n        text,\n        {\n          colorDark: \"#000000\",\n          colorLight: \"#ffffff\",\n          correctLevel: QRCode.CorrectLevel || 1, // Default to 1 if CorrectLevel is undefined\n        },\n        (error) => {\n          if (error) console.error(error);\n        }\n      );\n    }\n  }, [text]);\n\n  return (\n    <div className=\"InstructorAttendance\">\n      <canvas id=\"qrcode\" ref={qrRef}></canvas>\n      <div className=\"button-container\">\n        <button\n          className=\"InstructorAttendance_Done\"\n          onClick={() => navigate(\"/InstructorHome\")}\n        >\n          Cancel\n        </button>\n        <button\n          className=\"InstructorAttendance_Finish\"\n          onClick={() => navigate(\"/InstructorDone\")}\n        >\n          Finish\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default InstructorAttendance;\n\n// // URL of the API endpoint -- code for pulling from a qr code\n// const apiUrl = \"http://10.100.178.140:5000/items\";\n\n// useEffect(() => {\n//   async function fetchData() {\n//     try {\n//       const response = await fetch(apiUrl);\n\n//       // Check if the request was successful\n//       if (!response.ok) {\n//         throw new Error(\"Network response was not ok \" + response.statusText);\n//       }\n\n//       // Parse the JSON from the response\n//       const data = await response.json();\n\n//       // Use the data to generate the QR code\n//       setText(JSON.stringify(data)); // Assuming data is an object; you may need to adjust this based on your API response\n//     } catch (error) {\n//       // Handle any errors\n//       console.error(\"There was a problem with the fetch operation:\", error);\n//     }\n//   }\n\n//   fetchData();\n// }, [apiUrl]);\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAO,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,oBAAoBA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,eAAe,CAAC;EACjD,MAAMY,KAAK,GAAGV,MAAM,CAAC,CAAC;EAEtBD,SAAS,CAAC,MAAM;IACd,IAAIW,KAAK,CAACC,OAAO,IAAIH,IAAI,EAAE;MACzB,MAAMI,MAAM,GAAGF,KAAK,CAACC,OAAO;MAC5B,MAAME,IAAI,GAAGC,IAAI,CAACC,GAAG,CAACC,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;MAC5DN,MAAM,CAACO,KAAK,GAAGN,IAAI;MACnBD,MAAM,CAACQ,MAAM,GAAGP,IAAI;MAEpBX,MAAM,CAACmB,QAAQ,CACbT,MAAM,EACNJ,IAAI,EACJ;QACEc,SAAS,EAAE,SAAS;QACpBC,UAAU,EAAE,SAAS;QACrBC,YAAY,EAAEtB,MAAM,CAACuB,YAAY,IAAI,CAAC,CAAE;MAC1C,CAAC,EACAC,KAAK,IAAK;QACT,IAAIA,KAAK,EAAEC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACjC,CACF,CAAC;IACH;EACF,CAAC,EAAE,CAAClB,IAAI,CAAC,CAAC;EAEV,oBACEJ,OAAA;IAAKwB,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnCzB,OAAA;MAAQ0B,EAAE,EAAC,QAAQ;MAACC,GAAG,EAAErB;IAAM;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eACzC/B,OAAA;MAAKwB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BzB,OAAA;QACEwB,SAAS,EAAC,2BAA2B;QACrCQ,OAAO,EAAEA,CAAA,KAAM7B,QAAQ,CAAC,iBAAiB,CAAE;QAAAsB,QAAA,EAC5C;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT/B,OAAA;QACEwB,SAAS,EAAC,6BAA6B;QACvCQ,OAAO,EAAEA,CAAA,KAAM7B,QAAQ,CAAC,iBAAiB,CAAE;QAAAsB,QAAA,EAC5C;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC7B,EAAA,CA9CQD,oBAAoB;EAAA,QACVJ,WAAW;AAAA;AAAAoC,EAAA,GADrBhC,oBAAoB;AAgD7B,eAAeA,oBAAoB;;AAEnC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}